---
# =============================================================================
# tasks file for ansible-role-compliance-windows-windows-components-policy-2012
# =============================================================================
#
#
# ==================================================================
# collect hostname and ip address information
# ==================================================================
- name: collect hostname
  win_shell: >
    $sysinfo=Get-WmiObject -Class win32_computersystem;
    $server="{0}.{1}" -f $sysinfo.Name, $sysinfo.domain;
    $server
  register: FQDN_hostname
  ignore_errors: true

- name: set output
  set_fact:
   FQDN_hostname: "{{ FQDN_hostname.stdout_lines | join }}"

- block:
   - debug:
      msg:
       - "The FQDN hostname is.....{{ FQDN_hostname }}"

- name: collect ip address
  win_shell: >
     (Get-NetIPConfiguration | Where-Object { $_.IPv4DefaultGateway -ne
     $null -and $_.netadapter.status -ne "Disconnected"}).ipv4address.ipaddress
  register: default_ipv4_address
  ignore_errors: true

- name: set output
  set_fact:
   default_ipv4_address: "{{ default_ipv4_address.stdout_lines | join }}"

- block:
   - debug:
      msg:
       - "The default_ipv4_address is.....{{ default_ipv4_address }}"


# ==================================================================
# Get O\S information
# ==================================================================
- name: "Get Operating Systerm version information"
  win_shell: (get-WMIobject win32_operatingsystem).Name
  register: Win_os_ver_out
  ignore_errors: true

- name: "set output variable"
  set_fact:
   Win_os_ver_out="{{ Win_os_ver_out.stdout_lines|list|join }}"

- name: "check and ensure if the windows server is a 2012 server"
  fail:
   msg: "This server is NOT a windows 2012 server: {{ Win_os_ver_out }}"
  when: approved_windows_ver not in Win_os_ver_out

- block:
   - debug:
      msg:
       - "This server IS a windows 2012 server: {{ Win_os_ver_out }}"
  when: approved_windows_ver in Win_os_ver_out
#
#
# ========================================================================
# 18.9.6.1 (L1) Ensure 'Allow Microsoft accounts to be optional' is set to
# 'Enabled' (Scored)
# ========================================================================
- name: "18.9.6.1 (L1) 'Allow Microsoft accnts to be optional' set to 'Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The MSAOptional setting (18.9.6.1)"
   check_against: "{{ MSAOptional_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -name
     "MSAOptional"|Select-Object -ExpandProperty "MSAOptional"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
    name: "MSAOptional"
    data: "1"
    type: dword
  when: execute_18_9_6_1 == "YES"


# ======================================================================
# 18.9.8.1 (L1) Ensure 'Disallow Autoplay for non-volume devices' is set
# to 'Enabled' (Scored)
# ======================================================================
- name: "18.9.8.1 (L1) 'Disallow Autoplay for non-volume devices'='Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The NoAutoplayfornonVolume setting (18.9.8.1)"
   check_against: "{{ NoAutoplayfornonVolume_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows\Explorer" -name
     "NoAutoplayfornonVolume"|Select-Object
     -ExpandProperty "NoAutoplayfornonVolume"
   win_regedit_cmd:
    path: HKLM:\Software\Policies\Microsoft\Windows\Explorer
    name: "NoAutoplayfornonVolume"
    data: "1"
    type: dword
  when: execute_18_9_8_1 == "YES"


# =====================================================================
# 18.9.8.2 (L1) Ensure 'Set the default behavior for AutoRun' is set to
# 'Enabled: Do not execute any autorun commands' (Scored)
# =====================================================================
- name: "18.9.8.2 (L1) 'Set...AutoRun'='Enabled: Do not exct any autorun cmds'"
  include_tasks: win_check.yml
  vars:
   title: "The NoAutorun setting (18.9.8.2)"
   check_against: "{{ NoAutorun_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" -name
     "NoAutorun"|Select-Object -ExpandProperty "NoAutorun"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer
    name: "NoAutorun"
    data: "1"
    type: dword
  when: execute_18_9_8_2 == "YES"


# ========================================================================
# 18.9.8.3 (L1) Ensure 'Turn off Autoplay' is set to 'Enabled: All drives'
# ========================================================================
- name: "18.9.8.3 (L1) 'Turn off Autoplay' is set to 'Enabled: All drives'"
  include_tasks: win_check.yml
  vars:
   title: "The NoDriveTypeAutoRun setting (18.9.8.3)"
   check_against: "{{ NoDriveTypeAutoRun_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\policies\Explorer"
     -name "NoDriveTypeAutoRun"|Select-Object
     -ExpandProperty "NoDriveTypeAutoRun"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\policies\Explorer
    name: "NoDriveTypeAutoRun"
    data: "255"
    type: dword
  when: execute_18_9_8_3 == "YES"


# ========================================================================
# 18.9.13.1 (L1) Ensure 'Do not display the password reveal button' is set
# to 'Enabled' (Scored)
# =========================================================================
- name: "18.9.13.1 (L1) 'Do not display the password reveal button'='Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The DisablePasswordReveal setting (18.9.13.1)"
   check_against: "{{ DisablePasswordReveal_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CredUI" -name
     "DisablePasswordReveal"|Select-Object
     -ExpandProperty "DisablePasswordReveal"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\CredUI
    name: "DisablePasswordReveal"
    data: "1"
    type: dword
  when: execute_18_9_13_1 == "YES"


# ============================================================================
# 18.9.13.2 (L1) Ensure 'Enumerate administrator accounts on elevation' is set
# to 'Disabled' (Scored)
# ============================================================================
- name: "18.9.13.2 (L1) 'Enmrte administrator accnts on elevation'='Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The EnumerateAdministrators setting (18.9.13.2)"
   check_against: "{{ EnumerateAdministrators_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\CredUI" -name
     "EnumerateAdministrators"|Select-Object
     -ExpandProperty "EnumerateAdministrators"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\CredUI
    name: "EnumerateAdministrators"
    data: "0"
    type: dword
  when: execute_18_9_13_2 == "YES"

# =========================================================================
# 18.9.22.1 (L1) Ensure 'EMET 5.5' or higher is installed (Scored)
# =========================================================================
- name: "18.9.22.1 (L1) Ensure 'EMET 5.5' or higher is installed (Scored)"
  win_shell: >
    $emet_check=get-itemproperty -path {{ x64_path }}Uninstall\*,
    {{ x86_path }} | select-object -property displayversion, displayname |
    where-object Displayname -like "emet*" | select displayname
    -expandproperty displayname; $emet_version=get-itemproperty
    -path {{ x64_path }}Uninstall\*, {{ x86_path }} | select-object
    -property displayversion, displayname | where-object Displayname
    -like "emet*" | select displayversion
    -expandproperty displayversion;if (($emet_check -like "EMET*") -and
    ($emet_version -ge 5.5)) {echo "EMET app installed"}
    else {echo "EMET app NOT installed"}
  register: emet_check_out
  ignore_errors: true
  when: execute_18_9_22_1 == "YES"

- name: set output
  set_fact:
   emet_check_out: "{{ emet_check_out.stdout_lines | join }}"
  when: execute_18_9_22_1 == "YES"

- block:
   - debug:
      msg:
       - "{{ emet_check_out }}"
  when: execute_18_9_22_1 == "YES"

- block:
   - debug:
      msg:
       - "The FQDN hostname is.............{{ FQDN_hostname }}"
       - "The default_ipv4_address is......{{ default_ipv4_address }}"
       - ""
       - "The EMET 5.5 setting (18.9.22.1) is Non-Compliant:"
       - "{{ emet_check_out }}"
       - "The following application (or higher version) should be installed:"
       - "EMET 5.5 or higher"
  when: >
    execute_18_9_22_1 == "YES" and
    emet_check_out == "EMET app NOT installed"

- block:
   - debug:
      msg:
       - "The FQDN hostname is.............{{ FQDN_hostname }}"
       - "The default_ipv4_address is......{{ default_ipv4_address }}"
       - ""
       - "The EMET 5.5 setting (18.9.22.1) is Compliant:"
       - "{{ emet_check_out }}"
       - "The following app (version 5.5 or higher) should be installed"
       - "EMET 5.5 or higher"
  when: >
    execute_18_9_22_1 == "YES" and
    emet_check_out == "EMET app installed"

# =========================================================================
# 18.9.22.2 (L1) Ensure 'Default Action and Mitigation Settings' is set to
# 'Enabled' (plus subsettings) (Scored)
# =========================================================================
- name: "18.9.22.2 (L1) 'Default Action and Mitigation Settings'='Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The AntiDetours setting (18.9.22.2)"
   check_against: "{{ AntiDetours_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\EMET\SysSettings" -name
     "AntiDetours"|Select-Object
     -ExpandProperty "AntiDetours"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Policies\Microsoft\EMET\SysSettings
    name: "AntiDetours"
    data: "1"
    type: dword
  when: >
    execute_18_9_22_2 == "YES" and
    emet_check_out == "EMET app installed"


- name: "18.9.22.2 - Set Output if EMET is NOT installed"
  include_tasks: debug_emet_non_complianct_block.yml
  vars:
   title: "The AntiDetours setting (18.9.22.2)"
  when: >
    execute_18_9_22_2 == "YES" and
    emet_check_out == "EMET app NOT installed"


# =====================================================================
- name: "18.9.22.2 (L1) 'Default Action and Mitigation Settings'='Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The BannedFunctions setting (18.9.22.2)"
   check_against: "{{ BannedFunctions_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\EMET\SysSettings" -name
     "BannedFunctions"|Select-Object
     -ExpandProperty "BannedFunctions"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Policies\Microsoft\EMET\SysSettings
    name: "BannedFunctions"
    data: "1"
    type: dword
  when: >
    execute_18_9_22_2 == "YES" and
    emet_check_out == "EMET app installed"


- name: "18.9.22.2 - Set Output if EMET is NOT installed"
  include_tasks: debug_emet_non_complianct_block.yml
  vars:
   title: "The BannedFunctions setting (18.9.22.2)"
  when: >
    execute_18_9_22_2 == "YES" and
    emet_check_out == "EMET app NOT installed"


# =====================================================================
- name: "18.9.22.2 (L1) 'Default Action and Mitigation Settings'='Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The DeepHooks setting (18.9.22.2)"
   check_against: "{{ DeepHooks_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\EMET\SysSettings" -name
     "DeepHooks"|Select-Object
     -ExpandProperty "DeepHooks"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Policies\Microsoft\EMET\SysSettings
    name: "DeepHooks"
    data: "1"
    type: dword
  when: >
    execute_18_9_22_2 == "YES" and
    emet_check_out == "EMET app installed"


- name: "18.9.22.2 - Set Output if EMET is NOT installed"
  include_tasks: debug_emet_non_complianct_block.yml
  vars:
   title: "The DeepHooks setting (18.9.22.2)"
  when: >
    execute_18_9_22_2 == "YES" and
    emet_check_out == "EMET app NOT installed"


  # =====================================================================
- name: "18.9.22.2 (L1) 'Default Action and Mitigation Settings'='Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The ExploitAction setting (18.9.22.2)"
   check_against: "{{ ExploitAction_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\EMET\SysSettings" -name
     "ExploitAction"|Select-Object
     -ExpandProperty "ExploitAction"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Policies\Microsoft\EMET\SysSettings
    name: "ExploitAction"
    data: "1"
    type: dword
  when: >
    execute_18_9_22_2 == "YES" and
    emet_check_out == "EMET app installed"


- name: "18.9.22.2 - Set Output if EMET is NOT installed"
  include_tasks: debug_emet_non_complianct_block.yml
  vars:
   title: "The ExploitAction setting (18.9.22.2)"
  when: >
    execute_18_9_22_2 == "YES" and
    emet_check_out == "EMET app NOT installed"


# =====================================================================
# 18.9.22.3 (L1) Ensure 'Default Protections for Internet Explorer' is
# set to 'Enabled' (Scored)
# =====================================================================
- name: "18.9.22.3 (L1)'Default Protections for Internet Explorer' = 'Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The IE setting (18.9.22.3)"
   check_against: "{{ IE_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\EMET\Defaults\" -name
     "IE"|Select-Object
     -ExpandProperty "IE"
   win_regedit_cmd:
    path: HKLM:\Software\Policies\Microsoft\EMET\Defaults
    name: "IE"
    data: "*\\Internet Explorer\\iexplore.exe"
    type: string
  when: >
    execute_18_9_22_3 == "YES" and
    emet_check_out == "EMET app installed"


- name: "18.9.22.3 - Set Output if EMET is NOT installed"
  include_tasks: debug_emet_non_complianct_block.yml
  vars:
   title: "The IE setting (18.9.22.3)"
  when: >
    execute_18_9_22_3 == "YES" and
    emet_check_out == "EMET app NOT installed"


# =====================================================================
# 18.9.22.4 (L1) Ensure 'Default Protections for Popular Software' is
# set to 'Enabled' (Scored)
# =====================================================================
- name: "18.9.22.4 (L1) 'Default Protections for Popular Software'='Enabled'"
  include_tasks: sub_routine_for_18_9_22_4.yml
  when: >
    execute_18_9_22_4 == "YES" and
    emet_check_out == "EMET app installed"


- name: "18.9.22.4 - Set Output if EMET is NOT installed"
  include_tasks: debug_emet_non_complianct_block.yml
  vars:
   title: "The settings for (18.9.22.4)"
  when: >
    execute_18_9_22_4 == "YES" and
    emet_check_out == "EMET app NOT installed"


# =====================================================================
# 18.9.22.5 (L1) Ensure 'Default Protections for for Recommended Software
# must be set to 'Enabled' (Scored)
# =====================================================================
- name: "18.9.22.5 (L1)'Default Protections for Recommended Software'='Enabled'"
  include_tasks: sub_routine_for_18_9_22_5.yml
  when: >
    execute_18_9_22_5 == "YES" and
    emet_check_out == "EMET app installed"


- name: "18.9.22.5 - Set Output if EMET is NOT installed"
  include_tasks: debug_emet_non_complianct_block.yml
  vars:
   title: "The settings for (18.9.22.5)"
  when: >
    execute_18_9_22_5 == "YES" and
    emet_check_out == "EMET app NOT installed"


# =========================================================================
# 18.9.22.6 (L1) Ensure 'System ASLR' is set to 'Enabled: Application Opt-In'
# =========================================================================
- name: "18.9.22.6 (L1) Ensure 'System ASLR' = 'Enabled: Application Opt-In'"
  include_tasks: win_check.yml
  vars:
   title: "The ASLR setting (18.9.22.6)"
   check_against: "{{ ASLR_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\EMET\SysSettings\" -name
     "ASLR"|Select-Object
     -ExpandProperty "ASLR"
   win_regedit_cmd:
    path: HKLM:\Software\Policies\Microsoft\EMET\SysSettings
    name: "ASLR"
    data: "3"
    type: dword
  when: >
    execute_18_9_22_6 == "YES" and
    emet_check_out == "EMET app installed"


- name: "18.9.22.6 - Set Output if EMET is NOT installed"
  include_tasks: debug_emet_non_complianct_block.yml
  vars:
   title: "The ASLR setting (18.9.22.6)"
  when: >
    execute_18_9_22_6 == "YES" and
    emet_check_out == "EMET app NOT installed"


# =========================================================================
# 18.9.22.7 (L1) Ensure 'System DEP' is set to 'Enabled: Application Opt-Out'
# =========================================================================
- name: "18.9.22.7 (L1) Ensure 'System DEP' = 'Enabled: Application Opt-Out'"
  include_tasks: win_check.yml
  vars:
   title: "The DEP setting (18.9.22.7)"
   check_against: "{{ DEP_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\EMET\SysSettings\" -name
     "DEP"|Select-Object
     -ExpandProperty "DEP"
   win_regedit_cmd:
    path: HKLM:\Software\Policies\Microsoft\EMET\SysSettings
    name: "DEP"
    data: "3"
    type: dword
  when: >
    execute_18_9_22_7 == "YES" and
    emet_check_out == "EMET app installed"


- name: "18.9.22.7 - Set Output if EMET is NOT installed"
  include_tasks: debug_emet_non_complianct_block.yml
  vars:
   title: "The DEP setting (18.9.22.7)"
  when: >
    execute_18_9_22_7 == "YES" and
    emet_check_out == "EMET app NOT installed"


# =========================================================================
# 18.9.22.8 (L1) Ensure 'System SEHOP' is set to 'Enabled: Application Opt-Out'
# =========================================================================
- name: "18.9.22.8 (L1) Ensure 'System SEHOP' = 'Enabled: Application Opt-Out'"
  include_tasks: win_check.yml
  vars:
   title: "The SEHOP setting (18.9.22.8)"
   check_against: "{{ SEHOP_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\EMET\SysSettings\" -name
     "SEHOP"|Select-Object
     -ExpandProperty "SEHOP"
   win_regedit_cmd:
    path: HKLM:\Software\Policies\Microsoft\EMET\SysSettings
    name: "SEHOP"
    data: "3"
    type: dword
  when: >
    execute_18_9_22_8 == "YES" and
    emet_check_out == "EMET app installed"


- name: "18.9.22.8 - Set Output if EMET is NOT installed"
  include_tasks: debug_emet_non_complianct_block.yml
  vars:
   title: "The SEHOP setting (18.9.22.8)"
  when: >
    execute_18_9_22_8 == "YES" and
    emet_check_out == "EMET app NOT installed"


# =====================================================================
# 18.9.24.1.1 (L1) Ensure 'Application: Control Event Log behavior when
# the log file reaches its maximum size' is set to 'Disabled' (Scored)
# =====================================================================
- name: "18.9.24.1.1 (L1) 'App: Control...file reaches its max size'='Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The Retention setting (18.9.24.1.1)"
   check_against: "{{ Retention_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Application" -name
     "Retention"|Select-Object -ExpandProperty "Retention"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Application
    name: "Retention"
    data: "0"
    type: string
  when: execute_18_9_24_1_1 == "YES"


# =============================================================================
# 18.9.24.1.2 (L1) Ensure 'Application: Specify the maximum log file size (KB)'
#  is set to 'Enabled: 32,768 or greater' (Scored)
# =============================================================================
- name: "18.9.24.1.2 (L1) 'Appl: max log file size(KB)'='Enbld:32,768 or grtr'"
  include_tasks: win_check_greater_than_equal_to.yml
  vars:
   title: "The MaxSize setting (18.9.24.1.2)"
   check_against: "{{ MaxSize_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Application" -name
     "MaxSize"|Select-Object -ExpandProperty "MaxSize"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Application
    name: "MaxSize"
    data: "32768"
    type: dword
  when: execute_18_9_24_1_2 == "YES"


# ==========================================================================
# 18.9.24.2.1 (L1) Ensure 'Security: Control Event Log behavior when the log
# file reaches its maximum size' is set to 'Disabled' (Scored)
# ==========================================================================
- name: "18.9.24.2.1 (L1) 'Sec: Cntrl...log file rches its max size'='Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The Retention setting (18.9.24.2.1)"
   check_against: "{{ Retention2_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Security" -name
     "Retention"|Select-Object -ExpandProperty "Retention"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Security
    name: "Retention"
    data: "0"
    type: string
  when: execute_18_9_24_2_1 == "YES"


# ==========================================================================
# 18.9.24.2.2 (L1) Ensure 'Security: Specify the maximum log file size (KB)'
#  is set to 'Enabled: 196,608 or greater' (Scored)
# ==========================================================================
- name: "18.9.24.2.2 (L1)'Sec: Spcfy max log fle sze(KB)'='Enbd:196,608 or gtr'"
  include_tasks: win_check_greater_than_equal_to.yml
  vars:
   title: "The MaxSize setting (18.9.24.2.2)"
   check_against: "{{ MaxSize2_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Security" -name
     "MaxSize"|Select-Object -ExpandProperty "MaxSize"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Security
    name: "MaxSize"
    data: "196608"
    type: dword
  when: execute_18_9_24_2_2 == "YES"


# ============================================================================
# 18.9.24.3.1 (L1) Ensure 'Setup: Control Event Log behavior when the log file
# reaches its maximum size' is set to 'Disabled' (Scored)
# ============================================================================
- name: "18.9.24.3.1 (L1)'Setup:Cntrl...whn log fle rchs its max sz'='Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The Retention setting (18.9.24.3.1)"
   check_against: "{{ Retention3_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Setup" -name
     "Retention"|Select-Object -ExpandProperty "Retention"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Setup
    name: "Retention"
    data: "0"
    type: string
  when: execute_18_9_24_3_1 == "YES"


# ===========================================================================
# 18.9.24.3.2 (L1) Ensure 'Setup: Specify the maximum log file size (KB)' is
# set to 'Enabled: 32,768 or greater' (Scored)
# ===========================================================================
- name: "18.9.24.3.2 (L1) maxlog file size (KB)=Enabled: 32,768 or greater"
  include_tasks: win_check_greater_than_equal_to.yml
  vars:
   title: "The MaxSize setting (18.9.24.3.2)"
   check_against: "{{ MaxSize3_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Setup" -name
     "MaxSize"|Select-Object -ExpandProperty "MaxSize"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\Setup
    name: "MaxSize"
    data: "32768"
    type: dword
  when: execute_18_9_24_3_2 == "YES"


# =============================================================================
# 18.9.24.4.1 (L1) Ensure 'System: Control Event Log behavior when the log file
# reaches its maximum size' is set to 'Disabled' (Scored)
# =============================================================================
- name: "18.9.24.4.1 (L1) Evnt Log bhvr whn the lg fl rchs its max sze'='Dsbld'"
  include_tasks: win_check.yml
  vars:
   title: "The Retention setting (18.9.24.4.1)"
   check_against: "{{ Retention4_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\System" -name
     "Retention"|Select-Object -ExpandProperty "Retention"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\System
    name: "Retention"
    data: "0"
    type: string
  when: execute_18_9_24_4_1 == "YES"


# ===========================================================================
# 18.9.24.4.2 (L1) Ensure 'System: Specify the maximum log file size (KB)' is
# set to 'Enabled: 32,768 or greater' (Scored)
# ============================================================================
- name: "18.9.24.4.2 (L1) max log file size (KB)=Enabled: 32,768 or greater"
  include_tasks: win_check_greater_than_equal_to.yml
  vars:
   title: "The MaxSize setting (18.9.24.4.2)"
   check_against: "{{ MaxSize4_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\System" -name
     "MaxSize"|Select-Object -ExpandProperty "MaxSize"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\EventLog\System
    name: "MaxSize"
    data: "32768"
    type: dword
  when: execute_18_9_24_4_2 == "YES"


# ===========================================================================
# 18.9.28.2 (L1) Ensure 'Configure Windows SmartScreen' is set to 'Enabled'
# ===========================================================================
- name: "18.9.28.2 (L1) 'Configure Windows SmartScreen' is set to 'Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The EnableSmartScreen setting (18.9.28.2)"
   check_against: "{{ EnableSmartScreen_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\System" -name
     "EnableSmartScreen"|Select-Object -ExpandProperty "EnableSmartScreen"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\System
    name: "EnableSmartScreen"
    data: "0"
    type: dword
  when: execute_18_9_28_2 == "YES"


# ===========================================================================
# 18.9.28.3 (L1) Ensure 'Turn off Data Execution Prevention for Explorer' is
# set to 'Disabled' (Scored)
# ===========================================================================
- name: "18.9.28.3 (L1) 'Turn off Data Exctn Prvntn for Explorer'='Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The NoDataExecutionPrevention setting (18.9.28.3)"
   check_against: "{{ NoDataExecutionPrevention_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer" -name
     "NoDataExecutionPrevention"|Select-Object
     -ExpandProperty "NoDataExecutionPrevention"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer
    name: "NoDataExecutionPrevention"
    data: "0"
    type: dword
  when: execute_18_9_28_3 == "YES"


# ======================================================================
# 18.9.28.4 (L1) Ensure 'Turn off heap termination on corruption' is set
# to 'Disabled' (Scored)
# ======================================================================
- name: "18.9.28.4 (L1) 'Turn off heap termination on corruption' = 'Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The NoHeapTerminationOnCorruption setting (18.9.28.4)"
   check_against: "{{ NoHeapTerminationOnCorruption_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer" -name
     "NoHeapTerminationOnCorruption"|Select-Object
     -ExpandProperty "NoHeapTerminationOnCorruption"
   win_regedit_cmd:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\Explorer
    name: "NoHeapTerminationOnCorruption"
    data: "0"
    type: dword
  when: execute_18_9_28_4 == "YES"


# =========================================================================
# 18.9.28.5 (L1) Ensure 'Turn off shell protocol protected mode' is set to
#  'Disabled' (Scored)
# =========================================================================
- name: "18.9.28.5 (L1) 'Turn off shell protocol protected mode' = 'Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "PreXPSP2ShellProtocolBehavior setting (18.9.28.5)"
   check_against: "{{ PreXPSP2ShellProtocolBehavior_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -name
     "PreXPSP2ShellProtocolBehavior"|Select-Object
     -ExpandProperty "PreXPSP2ShellProtocolBehavior"
   win_regedit_cmd:
    path: HKLM:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer
    name: "PreXPSP2ShellProtocolBehavior"
    data: "0"
    type: dword
  when: execute_18_9_28_5 == "YES"


# =====================================================================
# 18.9.35.1 (L2) Ensure 'Turn off location' is set to 'Enabled' (Scored)
# =====================================================================
- name: "18.9.35.1 (L2) Ensure 'Turn off location' is set to 'Enabled' (Scored)"
  include_tasks: win_check.yml
  vars:
   title: "The DisableLocation setting (18.9.35.1)"
   check_against: "{{ DisableLocation_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows\LocationAndSensors" -name
     "DisableLocation"|Select-Object -ExpandProperty "DisableLocation"
   win_regedit_cmd:
    path: HKLM:\Software\Policies\Microsoft\Windows\LocationAndSensors
    name: "DisableLocation"
    data: "1"
    type: dword
  when: execute_18_9_35_1 == "YES"


# =======================================================================
# 18.9.48.2.2 (L1) Ensure 'Do not allow passwords to be saved' is set to
# 'Enabled' (Scored)
# =======================================================================
- name: "18.9.48.2.2 (L1) 'Do not allow passwords to be saved' = 'Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The DisablePasswordSaving setting (18.9.48.2.2)"
   check_against: "{{ DisablePasswordSaving_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services" -name
     "DisablePasswordSaving"|Select-Object
     -ExpandProperty "DisablePasswordSaving"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services'
    name: "DisablePasswordSaving"
    data: "1"
    type: dword
  when: execute_18_9_48_2_2 == "YES"


# =============================================================================
# 18.9.48.3.2.1 (L2) Ensure 'Restrict Remote Desktop Services users to a single
# Remote Desktop Services session' is set to 'Enabled' (Scored)
# =============================================================================
- name: "18.9.48.3.2.1 (L2) Remote Desktop Services session'='Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The fSingleSessionPerUser setting (18.9.48.3.2.1)"
   check_against: "{{ fSingleSessionPerUser_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services" -name
     "fSingleSessionPerUser"|Select-Object
     -ExpandProperty "fSingleSessionPerUser"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services'
    name: "fSingleSessionPerUser"
    data: "1"
    type: dword
  when: execute_18_9_48_3_2_1 == "YES"


# ============================================================================
# 18.9.48.3.3.1 (L2) Ensure 'Do not allow COM port redirection' set to 'Enabled'
# ============================================================================
- name: "18.9.48.3.3.1 (L2) 'Do not allow COM port redirection'='Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The fDisableCcm setting (18.9.48.3.3.1)"
   check_against: "{{ fDisableCcm_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services" -name
     "fDisableCcm"|Select-Object -ExpandProperty "fDisableCcm"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services'
    name: "fDisableCcm"
    data: "1"
    type: dword
  when: execute_18_9_48_3_3_1 == "YES"


# =============================================================================
# 18.9.48.3.3.2 (L1) Ensure 'Do not allow drive redirection' is set to 'Enabled'
# =============================================================================
- name: "18.9.48.3.3.2 (L1) Ensure 'Do not allow drive redirection' = 'Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The fDisableCdm setting (18.9.48.3.3.2)"
   check_against: "{{ fDisableCdm_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services" -name
     "fDisableCdm"|Select-Object -ExpandProperty "fDisableCdm"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services'
    name: "fDisableCdm"
    data: "1"
    type: dword
  when: execute_18_9_48_3_3_2 == "YES"


# =============================================================================
# 18.9.48.3.3.3 (L2) Ensure 'Do not allow LPT port redirection' set to 'Enabled'
# =============================================================================
- name: "18.9.48.3.3.3 (L2) 'Do not allow LPT port redirection'='Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The fDisableLPT setting (18.9.48.3.3.3)"
   check_against: "{{ fDisableLPT_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services" -name
     "fDisableLPT"|Select-Object -ExpandProperty "fDisableLPT"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services'
    name: "fDisableLPT"
    data: "1"
    type: dword
  when: execute_18_9_48_3_3_3 == "YES"


# ======================================================================
# 18.9.48.3.3.4 (L2) Ensure 'Do not allow supported Plug and Play device
# redirection' is set to 'Enabled' (Scored)
# ======================================================================
- name: "18.9.48.3.3.4 (L2) 'Do nt allow spprtd PnP dvce redirection'='Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The fDisablePNPRedir setting (18.9.48.3.3.4)"
   check_against: "{{ fDisablePNPRedir_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services" -name
     "fDisablePNPRedir"|Select-Object -ExpandProperty "fDisablePNPRedir"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services'
    name: "fDisablePNPRedir"
    data: "1"
    type: dword
  when: execute_18_9_48_3_3_4 == "YES"


# =====================================================================
# 18.9.48.3.9.1 (L1) Ensure 'Always prompt for password upon connection'
# is set to 'Enabled' (Scored)
# =====================================================================
- name: "18.9.48.3.9.1 (L1) 'Always prompt for pw upon connection'='Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The fPromptForPassword setting (18.9.48.3.9.1)"
   check_against: "{{ fPromptForPassword_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services" -name
     "fPromptForPassword"|Select-Object -ExpandProperty "fPromptForPassword"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services'
    name: "fPromptForPassword"
    data: "1"
    type: dword
  when: execute_18_9_48_3_9_1 == "YES"


# =====================================================================
# 18.9.48.3.9.2 (L1) Ensure 'Require secure RPC communication' is set
# to 'Enabled' (Scored)
# =====================================================================
- name: "18.9.48.3.9.2 (L1) 'Require secure RPC communication'='Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The fEncryptRPCTraffic setting (18.9.48.3.9.2)"
   check_against: "{{ fEncryptRPCTraffic_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services" -name
     "fEncryptRPCTraffic"|Select-Object -ExpandProperty "fEncryptRPCTraffic"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services'
    name: "fEncryptRPCTraffic"
    data: "1"
    type: dword
  when: execute_18_9_48_3_9_2 == "YES"


# =====================================================================
# 18.9.48.3.9.3 (L1) Ensure 'Set client connection encryption level' is
# set to 'Enabled: High Level' (Scored)
# =====================================================================
- name: "18.9.48.3.9.3 (L1) 'St clnt cnnctn encryptn lvl'='Enabled: High Level'"
  include_tasks: win_check.yml
  vars:
   title: "The MinEncryptionLevel setting (18.9.48.3.9.3)"
   check_against: "{{ MinEncryptionLevel_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services" -name
     "MinEncryptionLevel"|Select-Object -ExpandProperty "MinEncryptionLevel"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services'
    name: "MinEncryptionLevel"
    data: "3"
    type: dword
  when: execute_18_9_48_3_9_3 == "YES"


# ===========================================================================
# 18.9.48.3.10.1 (L2) Ensure 'Set time limit for active but idle Remote
# Desktop Services sessions' is set to 'Enabled: 15 minutes or less' (Scored)
# ===========================================================================
- name: "18.9.48.3.10.1 (L2) 'RDS sessions'='Enabled: =<15 minutes'"
  include_tasks: win_check_less_than_equal_to_but_not_zero.yml
  vars:
   title: "The MaxIdleTime setting (18.9.48.3.10.1)"
   check_against: "{{ MaxIdleTime_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services" -name
     "MaxIdleTime"|Select-Object -ExpandProperty "MaxIdleTime"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services'
    name: "MaxIdleTime"
    data: "900000"
    type: dword
  when: execute_18_9_48_3_10_1 == "YES"


# =====================================================================
# 18.9.48.3.10.2 (L2) Ensure 'Set time limit for disconnected sessions'
#  is set to 'Enabled: 1 minute' (Scored)
# =====================================================================
- name: "18.9.48.3.10.2 (L2)'Set time limit fr dscnnctd sssns'='Enabled: 1 min'"
  include_tasks: win_check.yml
  vars:
   title: "The MaxDisconnectionTime setting (18.9.48.3.10.2)"
   check_against: "{{ MaxDisconnectionTime_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services" -name
     "MaxDisconnectionTime"|Select-Object -ExpandProperty "MaxDisconnectionTime"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services'
    name: "MaxDisconnectionTime"
    data: "60000"
    type: dword
  when: execute_18_9_48_3_10_2 == "YES"


# =====================================================================
# 18.9.48.3.11.1 (L1) Ensure 'Do not delete temp folders upon exit' is
# set to 'Disabled' (Scored)
# =====================================================================
- name: "18.9.48.3.11.1 (L1) 'Do not delete temp folders upon exit'='Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The DeleteTempDirsOnExit setting (18.9.48.3.11.1)"
   check_against: "{{ DeleteTempDirsOnExit_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services" -name
     "DeleteTempDirsOnExit"|Select-Object -ExpandProperty "DeleteTempDirsOnExit"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services'
    name: "DeleteTempDirsOnExit"
    data: "1"
    type: dword
  when: execute_18_9_48_3_11_1 == "YES"


# =====================================================================
# 18.9.48.3.11.2 (L1) Ensure 'Do not use temporary folders per session'
# is set to 'Disabled' (Scored)
# =====================================================================
- name: "18.9.48.3.11.2 (L1) 'Do not use tmprry folders per session'='Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The PerSessionTempDir setting (18.9.48.3.11.2)"
   check_against: "{{ PerSessionTempDir_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services" -name
     "PerSessionTempDir"|Select-Object -ExpandProperty "PerSessionTempDir"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services'
    name: "PerSessionTempDir"
    data: "1"
    type: dword
  when: execute_18_9_48_3_11_2 == "YES"


# =====================================================================
# 18.9.49.1 (L1) Ensure 'Prevent downloading of enclosures' is set to
# 'Enabled' (Scored)
# =====================================================================
- name: "18.9.49.1 (L1) 'Prevent downloading of enclosures' = 'Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The DisableEnclosureDownload setting (18.9.49.1)"
   check_against: "{{ DisableEnclosureDownload_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Internet Explorer\Feeds" -name
     "DisableEnclosureDownload"|Select-Object
     -ExpandProperty "DisableEnclosureDownload"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Internet Explorer\Feeds'
    name: "DisableEnclosureDownload"
    data: "1"
    type: dword
  when: execute_18_9_49_1 == "YES"


# =====================================================================
# 18.9.50.2 (L1) Ensure 'Allow indexing of encrypted files' is set to
# 'Disabled' (Scored)
# =====================================================================
- name: "18.9.50.2 (L1) 'Allow indexing of encrypted files'='Disabled' (Scored)"
  include_tasks: win_check.yml
  vars:
   title: "The AllowIndexingEncryptedStoresOrItems setting (18.9.50.2)"
   check_against: "{{ AllowIndexingEncryptedStoresOrItems_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -name
     "AllowIndexingEncryptedStoresOrItems"|Select-Object
     -ExpandProperty "AllowIndexingEncryptedStoresOrItems"
   win_regedit_cmd:
    path: 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search'
    name: "AllowIndexingEncryptedStoresOrItems"
    data: "0"
    type: dword
  when: execute_18_9_50_2 == "YES"


# =====================================================================
# 18.9.50.3 (L2) Ensure 'Set what information is shared in Search' is
# set to 'Enabled: Anonymous info' (Scored)
# =====================================================================
- name: "18.9.50.3 (L2)'Set what info is shrd in Search'='Enabled: Annyms info'"
  include_tasks: win_check.yml
  vars:
   title: "The ConnectedSearchPrivacy setting (18.9.50.3)"
   check_against: "{{ ConnectedSearchPrivacy_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search" -name
     "ConnectedSearchPrivacy"|Select-Object
     -ExpandProperty "ConnectedSearchPrivacy"
   win_regedit_cmd:
    path: 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Search'
    name: "ConnectedSearchPrivacy"
    data: "1"
    type: dword
  when: execute_18_9_50_3 == "YES"


# =====================================================================
# 18.9.54.1 (L1) Ensure 'Prevent the usage of SkyDrive for file storage'
# is set to 'Enabled' (Scored)
# =====================================================================
- name: "18.9.54.1 (L1)'Prevent the usge of SkyDrve for file storage'='Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The DisableFileSync setting (18.9.54.1)"
   check_against: "{{ DisableFileSync_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows\Skydrive" -name
     "DisableFileSync"|Select-Object
     -ExpandProperty "DisableFileSync"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows\Skydrive'
    name: "DisableFileSync"
    data: "1"
    type: dword
  when: execute_18_9_54_1 == "YES"


# =====================================================================
# 18.9.56.1 (L2) Ensure 'Turn off KMS Client Online AVS Validation' is
# set to 'Enabled' (Scored)
# =====================================================================
- name: "18.9.56.1 (L2) 'Turn off KMS Client Online AVS Validation'='Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The NoGenTicket setting (18.9.56.1)"
   check_against: "{{ NoGenTicket_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows
     NT\CurrentVersion\Software Protection Platform"
     -name "NoGenTicket"|Select-Object -ExpandProperty "NoGenTicket"
   win_regedit_cmd:
    path: "{{ NTcrvr_reg }}Software Protection Platform"
    name: "NoGenTicket"
    data: "1"
    type: dword
  when: execute_18_9_56_1 == "YES"


# =====================================================================
# 18.9.58.1 (L1) Ensure 'Turn off Automatic Download and Install of
# updates' is set to 'Disabled' (Scored)
# =====================================================================
- name: "18.9.58.1 (L1) 'Turn off Auto Dwnld and Install of updates'='Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The AutoDownload setting (18.9.58.1)"
   check_against: "{{ AutoDownload_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\WindowsStore" -name
     "AutoDownload"|Select-Object -ExpandProperty "AutoDownload"
   win_regedit_cmd:
    path: 'HKLM:\SOFTWARE\Policies\Microsoft\WindowsStore'
    name: "AutoDownload"
    data: "2"
    type: dword
  when: execute_18_9_58_1 == "YES"


# =====================================================================
# 18.9.58.2 (L1) Ensure 'Turn off the offer to update to the latest
# version of Windows' is set to 'Enabled' (Scored)
# =====================================================================
- name: "18.9.58.2 (L1)'Trn off offr to updte to the ltst vrsn Wndws'='Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The DisableOSUpgrade setting (18.9.58.2)"
   check_against: "{{ DisableOSUpgrade_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\WindowsStore" -name
     "DisableOSUpgrade"|Select-Object -ExpandProperty "DisableOSUpgrade"
   win_regedit_cmd:
    path: 'HKLM:\SOFTWARE\Policies\Microsoft\WindowsStore'
    name: "DisableOSUpgrade"
    data: "1"
    type: dword
  when: execute_18_9_58_2 == "YES"


# =====================================================================
# 18.9.58.3 (L2) Ensure 'Turn off the Store application' is set to
# 'Enabled' (Scored)
# =====================================================================
- name: "18.9.58.3 (L2) 'Turn off the Store application' = 'Enabled' (Scored)"
  include_tasks: win_check.yml
  vars:
   title: "The RemoveWindowsStore setting (18.9.58.3)"
   check_against: "{{ RemoveWindowsStore_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\WindowsStore" -name
     "RemoveWindowsStore"|Select-Object -ExpandProperty "RemoveWindowsStore"
   win_regedit_cmd:
    path: 'HKLM:\SOFTWARE\Policies\Microsoft\WindowsStore'
    name: "RemoveWindowsStore"
    data: "1"
    type: dword
  when: execute_18_9_58_3 == "YES"


# =====================================================================
# 18.9.66.3.1 (L2) Ensure 'Join Microsoft MAPS' is set to 'Disabled' (Scored)
# =====================================================================
- name: "18.9.66.3.1 (L2) 'Join Microsoft MAPS' is set to 'Disabled' (Scored)"
  include_tasks: win_check.yml
  vars:
   title: "The SpyNetReporting setting (18.9.66.3.1)"
   check_against: "{{ SpyNetReporting_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows Defender\Spynet" -name
     "SpyNetReporting"|Select-Object -ExpandProperty "SpyNetReporting"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows Defender\Spynet'
    name: "SpyNetReporting"
    data: "0"
    type: dword
  when: execute_18_9_66_3_1 == "YES"


# =====================================================================
# 18.9.67.2.1 (L1) Ensure 'Configure Default consent' is set to 'Enabled:
# Always ask before sending data' (Scored)
# =====================================================================
- name: "18.9.67.2.1 (L1)'Cnfgr Dflt cnsnt'='Enbld: Alwys ask bfr sending data'"
  include_tasks: win_check.yml
  vars:
   title: "The DefaultConsent setting (18.9.67.3.1)"
   check_against: "{{ DefaultConsent_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\Windows
     Error Reporting"
     -name "AutoApproveOSDumps"|Select-Object
     -ExpandProperty "AutoApproveOSDumps"
   win_regedit_cmd:
    path: "{{ windws_reg }}Windows Error Reporting\\Consent"
    name: "DefaultConsent"
    data: "4"
    type: dword
  when: execute_18_9_67_2_1 == "YES"


# =====================================================================
# 18.9.67.3 (L1) Ensure 'Automatically send memory dumps for OS-generated
# error reports' is set to 'Disabled' (Scored)
# =====================================================================
- name: "18.9.67.3 (L1) 'Atmtclly send mem dmps for OS-gnrtd err rprts'='Dsbld'"
  include_tasks: win_check.yml
  vars:
   title: "The AutoApproveOSDumps setting (18.9.67.3)"
   check_against: "{{ AutoApproveOSDumps_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Windows Error Reporting\Consent"
     -name "DefaultConsent"|Select-Object
     -ExpandProperty "DefaultConsent"
   win_regedit_cmd:
    path: "{{ wow_win_reg }}Windows Error Reporting"
    name: "AutoApproveOSDumps"
    data: "0"
    type: dword
  when: execute_18_9_67_3 == "YES"


# =====================================================================
# 18.9.69.1 (L1) Ensure 'Allow user control over installs' = 'Disabled' (Scored)
# =====================================================================
- name: "18.9.69.1 (L1) Ensure 'Allow user control over installs'= 'Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The EnableUserControl setting (18.9.69.1)"
   check_against: "{{ EnableUserControl_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Installer" -name
     "EnableUserControl"|Select-Object -ExpandProperty "EnableUserControl"
   win_regedit_cmd:
    path: 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\Installer'
    name: "EnableUserControl"
    data: "0"
    type: dword
  when: execute_18_9_69_1 == "YES"


# =====================================================================
# 18.9.69.2 (L1) Ensure 'Always install with elevated privileges' is set
#  to 'Disabled' (Scored)
# =====================================================================
- name: "18.9.69.2 (L1) 'Always install with elevated privileges'='Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The AlwaysInstallElevated setting (18.9.69.2)"
   check_against: "{{ AlwaysInstallElevated_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows\Installer" -name
     "AlwaysInstallElevated"|Select-Object
     -ExpandProperty "AlwaysInstallElevated"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows\Installer'
    name: "AlwaysInstallElevated"
    data: "0"
    type: dword
  when: execute_18_9_69_2 == "YES"


# =====================================================================
# 18.9.69.3 (L2) Ensure 'Prevent Internet Explorer security prompt for
# Windows Installer scripts' is set to 'Disabled' (Scored)
# =====================================================================
- name: "18.9.69.3 (L2) 'Prevent...for Windows Installer scripts'=Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The SafeForScripting setting (18.9.69.3)"
   check_against: "{{ SafeForScripting_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\Installer" -name
     "SafeForScripting"|Select-Object -ExpandProperty "SafeForScripting"
   win_regedit_cmd:
    path: 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\Installer'
    name: "SafeForScripting"
    data: "0"
    type: dword
  when: execute_18_9_69_3 == "YES"


# =====================================================================
# 18.9.70.1 (L1) Ensure 'Sign-in last interactive user automatically
# after a system-initiated restart' is set to 'Disabled' (Scored)
# =====================================================================
- name: "18.9.70.1 (L1) 'Sign-in..after a system-initiated restart'='Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The DisableAutomaticRestartSignOn setting (18.9.70.1)"
   check_against: "{{ DisableAutomaticRestartSignOn_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -name
     "DisableAutomaticRestartSignOn"|Select-Object
     -ExpandProperty "DisableAutomaticRestartSignOn"
   win_regedit_cmd:
    path: 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System'
    name: "DisableAutomaticRestartSignOn"
    data: "1"
    type: dword
  when: execute_18_9_70_1 == "YES"


# =====================================================================
# 18.9.79.1 (L1) Ensure 'Turn on PowerShell Script Block Logging' is
# set to 'Disabled' (Scored)
# =====================================================================
- name: "18.9.79.1 (L1) 'Turn on PowerShell Script Block Logging'='Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The EnableScriptBlockLogging setting (18.9.79.1)"
   check_against: "{{ EnableScriptBlockLogging_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging"
     -name "EnableScriptBlockLogging"|Select-Object
     -ExpandProperty "EnableScriptBlockLogging"
   win_regedit_cmd:
    path: "{{ pwshell_reg }}ScriptBlockLogging"
    name: "EnableScriptBlockLogging"
    data: "1"
    type: dword
  when: execute_18_9_79_1 == "YES"


# =====================================================================
# 18.9.79.2 (L1) Ensure 'Turn on PowerShell Transcription' is set to
# 'Disabled' (Scored)
# =====================================================================
- name: "18.9.79.2 (L1) 'Turn on PowerShell Transcription' = 'Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The EnableTranscripting setting (18.9.79.2)"
   check_against: "{{ EnableTranscripting_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows\PowerShell\Transcription" -name
     "EnableTranscripting"|Select-Object -ExpandProperty "EnableTranscripting"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows\PowerShell\Transcription'
    name: "EnableTranscripting"
    data: "0"
    type: dword
  when: execute_18_9_79_2 == "YES"


# =========================================================================
# 18.9.81.1.1 (L1) Ensure 'Allow Basic authentication' is set to 'Disabled'
# =========================================================================
- name: "18.9.81.1.1 (L1) Ensure 'Allow Basic authentication' set to 'Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The AllowBasic setting (18.9.81.1.1)"
   check_against: "{{ AllowBasic_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows\WinRM\Client" -name
     "AllowBasic"|Select-Object -ExpandProperty "AllowBasic"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows\WinRM\Client'
    name: "AllowBasic"
    data: "0"
    type: dword
  when: execute_18_9_81_1_1 == "YES"


# ========================================================================
# 18.9.81.1.2 (L1) Ensure 'Allow unencrypted traffic' is set to 'Disabled'
# ========================================================================
- name: "18.9.81.1.2 (L1) 'Allow unencrypted traffic' is set to 'Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The AllowUnencryptedTraffic setting (18.9.81.1.2)"
   check_against: "{{ AllowUnencryptedTraffic_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows\WinRM\Client" -name
     "AllowUnencryptedTraffic"|Select-Object
     -ExpandProperty "AllowUnencryptedTraffic"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows\WinRM\Client'
    name: "AllowUnencryptedTraffic"
    data: "0"
    type: dword
  when: execute_18_9_81_1_2 == "YES"


# =====================================================================
# 18.9.81.1.3 (L1) Ensure 'Disallow Digest authentication' is set to
# 'Enabled' (Scored)
# =====================================================================
- name: "18.9.81.1.3 (L1) 'Disallow Digest authentication' is set to 'Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The AllowDigest setting (18.9.81.1.3)"
   check_against: "{{ AllowDigest_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows\WinRM\Client" -name
     "AllowDigest"|Select-Object -ExpandProperty "AllowDigest"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows\WinRM\Client'
    name: "AllowDigest"
    data: "0"
    type: dword
  when: execute_18_9_81_1_3 == "YES"


# =====================================================================
# 18.9.81.2.1 (L1) Ensure 'Allow Basic authentication' is set to
# 'Disabled' (Scored) .
# =====================================================================
- name: "18.9.81.2.1 (L1) 'Allow Basic authentication' is set to 'Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The AllowBasic setting (18.9.81.2.1)"
   check_against: "{{ AllowBasic2_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service" -name
     "AllowBasic"|Select-Object -ExpandProperty "AllowBasic"
   win_regedit_cmd:
    path: 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service'
    name: "AllowBasic"
    data: "0"
    type: dword
  when: execute_18_9_81_2_1 == "YES"


# ========================================================================
# 18.9.81.2.2 (L1) Ensure 'Allow unencrypted traffic' is set to 'Disabled'
# ========================================================================
- name: "18.9.81.2.2 (L1) 'Allow unencrypted traffic' is set to 'Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The AllowUnencryptedTraffic setting (18.9.81.2.2)"
   check_against: "{{ AllowUnencryptedTraffic2_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows\WinRM\Service" -name
     "AllowUnencryptedTraffic"|Select-Object
     -ExpandProperty "AllowUnencryptedTraffic"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows\WinRM\Service'
    name: "AllowUnencryptedTraffic"
    data: "0"
    type: dword
  when: execute_18_9_81_2_2 == "YES"


# ======================================================================
# 18.9.81.2.3 (L1) Ensure 'Disallow WinRM from storing RunAs credentials'
# is set to 'Enabled' (Scored)
# ======================================================================
- name: "18.9.81.2.3 (L1) 'Dsllw WinRM frm storing RunAs credentials'='Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The DisableRunAs setting (18.9.81.2.3)"
   check_against: "{{ DisableRunAs_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service" -name
     "DisableRunAs"|Select-Object -ExpandProperty "DisableRunAs"
   win_regedit_cmd:
    path: 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WinRM\Service'
    name: "DisableRunAs"
    data: "1"
    type: dword
  when: execute_18_9_81_2_3 == "YES"


# =====================================================================
# 18.9.82.1 (L2) Ensure 'Allow Remote Shell Access' is set to 'Disabled'
# =====================================================================
- name: "18.9.82.1 (L2) 'Allow Remote Shell Access' is set to 'Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The AllowRemoteShellAccess setting (18.9.82.1)"
   check_against: "{{ AllowRemoteShellAccess_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows\WinRM\Service\WinRS" -name
     "AllowRemoteShellAccess"|Select-Object
     -ExpandProperty "AllowRemoteShellAccess"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows\WinRM\Service\WinRS'
    name: "AllowRemoteShellAccess"
    data: "1"
    type: dword
  when: execute_18_9_82_1 == "YES"


# =====================================================================
# 18.9.85.1 (L1) Ensure 'Configure Automatic Updates' is set to 'Enabled'
# =====================================================================
- name: "18.9.85.1 (L1) Ensure 'Configure Automatic Updates' set to 'Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The NoAutoUpdate setting (18.9.85.1)"
   check_against: "{{ NoAutoUpdate_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate\AU" -name
     "NoAutoUpdate"|Select-Object -ExpandProperty "NoAutoUpdate"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate\AU'
    name: "NoAutoUpdate"
    data: "1"
    type: dword
  when: execute_18_9_85_1 == "YES"


# =====================================================================
# 18.9.85.2 (L1) Ensure 'Configure Automatic Updates: Scheduled install
# day' is set to '0 - Every day' (Scored)
# =====================================================================
- name: "18.9.85.2 (L1) 'Config Auto Updts: Schdld install day'='0 - Every day'"
  include_tasks: win_check.yml
  vars:
   title: "The ScheduledInstallDay setting (18.9.85.2)"
   check_against: "{{ ScheduledInstallDay_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate\AU" -name
     "ScheduledInstallDay"|Select-Object -ExpandProperty "ScheduledInstallDay"
   win_regedit_cmd:
    path: 'HKLM:\Software\Policies\Microsoft\Windows\WindowsUpdate\AU'
    name: "ScheduledInstallDay"
    data: "0"
    type: dword
  when: execute_18_9_85_2 == "YES"


# =====================================================================
# 18.9.85.3 (L1) Ensure 'No auto-restart with logged on users for
# scheduled automatic updates installations' is set to 'Disabled'
# =====================================================================
- name: "18.9.85.3 (L1) 'No auto-rstrt wth lggd...auto updts instlltns'='Dsbld'"
  include_tasks: win_check.yml
  vars:
   title: "The NoAutoRebootWithLoggedOnUsers setting (18.9.85.3)"
   check_against: "{{ NoAutoRebootWithLoggedOnUsers_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU" -name
     "NoAutoRebootWithLoggedOnUsers"|Select-Object
     -ExpandProperty "NoAutoRebootWithLoggedOnUsers"
   win_regedit_cmd:
    path: 'HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU'
    name: "NoAutoRebootWithLoggedOnUsers"
    data: "0"
    type: dword
  when: execute_18_9_85_3 == "YES"


# =====================================================================
# 19.7.4.1 (L1) Ensure 'Do not preserve zone information in file
# attachments' is set to 'Disabled' (Scored)
# =====================================================================
- name: "19.7.4.1 (L1) 'Do not preserve zone inf in file attchments'='Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The SaveZoneInformation setting (19.7.4.1)"
   check_against: "{{ SaveZoneInformation_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Attachments"
     -name "SaveZoneInformation"|Select-Object
     -ExpandProperty "SaveZoneInformation"
   win_regedit_cmd:
    path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Attachments
    name: "SaveZoneInformation"
    data: "2"
    type: dword
  when: execute_19_7_4_1 == "YES"


# =====================================================================
# 19.7.4.2 (L1) Ensure 'Notify antivirus programs when opening
# attachments' is set to 'Enabled' (Scored)
# =====================================================================
- name: "19.7.4.2 (L1) 'Notify av programs when opening attachments'='Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The ScanWithAntiVirus setting (19.7.4.2)"
   check_against: "{{ ScanWithAntiVirus_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Attachments"
     -name "ScanWithAntiVirus"|Select-Object -ExpandProperty "ScanWithAntiVirus"
   win_regedit_cmd:
    path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Attachments
    name: "ScanWithAntiVirus"
    data: "3"
    type: dword
  when: execute_19_7_4_2 == "YES"


# =====================================================================
# 19.7.25.1 (L1) Ensure 'Prevent users from sharing files within their
# profile.' is set to 'Enabled' (Scored)
# =====================================================================
- name: "19.7.25.1 (L1) 'Prvnt usrs frm shring fls wthn their prfle.'='Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The NoInPlaceSharing setting (19.7.25.1)"
   check_against: "{{ NoInPlaceSharing_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer" -name
     "NoInPlaceSharing"|Select-Object -ExpandProperty "NoInPlaceSharing"
   win_regedit_cmd:
    path: 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer'
    name: "NoInPlaceSharing"
    data: "1"
    type: dword
  when: execute_19_7_25_1 == "YES"


# =====================================================================
# 19.7.37.1 (L1) Ensure 'Always install with elevated privileges' is
# set to 'Disabled' (Scored)
# =====================================================================
- name: "19.7.37.1 (L1) 'Always install with elevated privileges'='Disabled'"
  include_tasks: win_check.yml
  vars:
   title: "The AlwaysInstallElevated setting (19.7.37.1)"
   check_against: "{{ AlwaysInstallElevated2_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKCU:\Software\Policies\Microsoft\Windows\Installer" -name
     "AlwaysInstallElevated"|Select-Object
     -ExpandProperty "AlwaysInstallElevated"
   win_regedit_cmd:
    path: 'HKCU:\Software\Policies\Microsoft\Windows\Installer'
    name: "AlwaysInstallElevated"
    data: "0"
    type: dword
  when: execute_19_7_37_1 == "YES"


# =====================================================================
# 19.7.41.2.1 (L2) Ensure 'Prevent Codec Download' is set to 'Enabled' (Scored)
# =====================================================================
- name: "19.7.41.2.1 (L2) Ensure 'Prevent Codec Download' is set to 'Enabled'"
  include_tasks: win_check.yml
  vars:
   title: "The PreventCodecDownload setting (19.7.41.2.1)"
   check_against: "{{ PreventCodecDownload_cis }}"
   win_shell_cmd: >
     Get-ItemProperty -path
     "HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer" -name
     "PreventCodecDownload"|Select-Object -ExpandProperty "PreventCodecDownload"
   win_regedit_cmd:
    path: 'HKCU:\Software\Policies\Microsoft\WindowsMediaPlayer'
    name: "PreventCodecDownload"
    data: "1"
    type: dword
  when: execute_19_7_41_2_1 == "YES"
